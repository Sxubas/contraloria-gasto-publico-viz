{"version":3,"sources":["Variables.jsx","GridChart.js","TableIrregularidades.jsx","BarChartHierarchy.js","BarchartHierarchyWrapper.jsx","Medias.jsx","Histograma.js","Main.jsx","App.js","serviceWorker.js","index.js"],"names":["endpoints","categorias","GridChart","ciudades","target","rubros","concat","rubrs","console","log","forEach","ciudad","irregularidadesEncontradas","rubro","push","name","Set","getRubros","cols","length","rows","nElements","width","height","getGridCoordinates","n","grx","Math","floor","yAxis","svg","attr","call","d3","yy","domain","range","pintar","selectAll","remove","svgg","append","data","enter","d","coord","incos","find","ingreso","padding","__c","__r","c","r","__boxWidth","__boxHeight","gridLayout","selection","grid","node","parentNode","each","i","el","this","grr","_","span_element","document","createElement","body","appendChild","x","size","getBBox","removeChild","fw","fh","xp","yp","text","dd","TableIrregularidades","props","laref","React","createRef","current","className","ref","Component","BarChartHierarchy","addCityToTable","margin","top","right","bottom","left","xAxis","g","ticks","select","color","barStep","barPadding","duration","update","root","sum","value","sort","a","b","eachAfter","index","parent","max","children","join","bar","down","selector","insert","style","on","datum","transition1","transition","transition2","exit","p","stack","stagger","t","empty","up","BarchartHierarchyWrapper","bh","Medias","state","hs","dataForHist","valores","map","PAGOS","Histograma","mean","std","nice","req","min","got","xilength","def","round","cur","bins","binData","y","count","minusButton","classed","indexOf","zoom","plusButton","dat","s","bin","filter","e","newBins","tickFormat","setState","prevProps","prevState","Main","catSelected","dataCategoria","rubroSelected","city","then","datas","NOM_DEST","keys","dataForH","Container","Row","Col","lg","Dropdown","display","Toggle","variant","id","Menu","cat","Item","key","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f9f4984.chunk.js","sourcesContent":["export const endpoints = {\n  dataDict: 'https://gist.githubusercontent.com/whatevercamps/a275475110c7bdcd5cd6cd3f392938e3/raw/1f8b3aac26ffed7a79e1a60ae0f52e4238e5f7f7/data_grid_nom_dest_dict.json',\n  dataNew: 'https://gist.githubusercontent.com/whatevercamps/ec5af4049a8ff1846bd3f767ad1826f7/raw/17c2fc9ad2e4ec6b1e5891bf022b604298c16c18/akjsdopad.json',\n  dataBarchart: 'https://gist.githubusercontent.com/whatevercamps/9119e91e7d1f9307c441c057e790c1a5/raw/7fd9814f02d0f435311f50be154f543b625430b6/irregularidades.json'\n};\n\n\nexport const categorias = [\n  'Cuarta',\n  'Especial',\n  'NO APLICA',\n  'Primera',\n  'Quinta',\n  'Segunda',\n  'Sexta',\n  'Tercera',\n  'Todas'];\n","\nimport * as d3 from 'd3';\n\nexport default function GridChart(ciudades, target) {\n    const GridChart = {};\n    const getRubros = (ciudades) => {\n        let rubrs = []\n        console.log(\"ciudades\", ciudades)\n        ciudades.forEach(ciudad => ciudad.irregularidadesEncontradas.forEach(rubro => rubrs.push(rubro.name)))\n        return [... new Set(rubrs)]\n    };\n\n    const rubros = [\"ciudad\"].concat(getRubros(ciudades));\n    const marginTopDown = 100;\n    const marginLeftRight = 400;\n    const p = 4;\n    const r = 100;\n    const cols = ciudades.length;\n    const rows = rubros.length;\n    const nElements = ciudades.length * rubros.length;\n\n    const width = 20 * cols + 2 * marginLeftRight;\n    const height = 20 * rows + 2 * marginTopDown;;\n\n    const gridLayout = function (cols, rows, padding, width, height) {\n\n        let __c = d3.scaleOrdinal().domain(d3.range(cols * rows)).range(d3.range(marginLeftRight, width - marginLeftRight, (width - 2 * marginLeftRight) / cols));\n        let __r = d3.scaleQuantile().domain([0, cols * rows]).range(d3.range(marginTopDown, height - marginTopDown, (height - 2 * marginTopDown) / rows));\n        let c = d3.scaleOrdinal().domain(d3.range(cols * rows)).range(d3.range(cols));\n        let r = d3.scaleQuantile().domain([0, cols * rows]).range(d3.range(rows));\n\n        // let __cellWidth = (width - 2 * marginLeftRight) / cols;\n        // let __cellHeight = (height - 2 * marginTopDown) / rows;\n        //let __cellHeight = (height - 2 * marginTopDown) / rows;\n        let __cellWidth = 20;\n        let __cellHeight = 20;\n\n        let __boxWidth = __cellWidth - padding * 2;\n        let __boxHeight = __cellHeight - padding * 2;\n\n        function gridLayout(selection) {\n            let grid = d3.select(selection.node().parentNode).append(\"g\").attr(\"class\", \"grid\");\n            return selection.each(function (d, i) {\n                let el = this;\n                let grr = grid.append(\"g\")\n                    .attr(\"class\", _ => \"cell \" + \"col-\" + c(i) + \" row-\" + r(i))\n                    .attr(\"transform\", function (_) {\n\n                        let span_element = document.createElement(\"span\");\n                        document.body.appendChild(span_element);\n\n                        d3.select(span_element).append(\"svg\").attr(\"width\", width).attr(\"hieght\", height).append(x => el);\n                        //d3.select(span_element).append(\"svg\").attr(\"width\", __cellWidth*cols+2*marginTopDown).attr(\"hieght\", height).append(x => el);\n\n                        let size = d3.select(el).node().getBBox()\n                        document.body.removeChild(span_element);\n\n                        let fw = size.width > __boxWidth ? __boxWidth / size.width : 1;\n                        let fh = size.height > __boxHeight ? __boxHeight / size.height : 1;\n\n                        let xp = 0;\n                        let yp = 0;\n\n                        if (fw > fh)\n                            xp = (__boxWidth - (fh * size.width)) / 2;\n\n                        if (fh > fw)\n                            yp = (__boxHeight - (fw * size.height)) / 2;\n\n                        if (fh == fw) {\n                            xp = (__boxWidth - (fh * size.width)) / 2;\n                            yp = (__boxHeight - (fw * size.height)) / 2;\n                        }\n\n\n                        return \"translate(\" + (__c(i) + padding + xp) + \" \" + (__r(i) + padding + yp) + \")\" + \" \" +\n                            \"scale(\" + d3.min([fw, fh]) + \")\"\n\n\n                    });\n                grr.append(x => el);\n\n                grr.append(\"text\").text(dd => {\n                    let coord = getGridCoordinates(d, ciudades.length)\n                    let ciudad = ciudades[coord[0]]\n                    let rubro = rubros[coord[1]]\n                    if (rubro == \"ciudad\")\n                        return ciudad.name\n                    else\n                        return \"\"\n                })\n                    .attr(\"font-family\", \"sans-serif\")\n                    .attr(\"font-size\", \"200px\")\n                    .attr(\"fill\", \"black\")\n                    .attr(\"transform\", \"translate(175,0) rotate(270)\");\n            })\n\n        };\n\n        gridLayout.rows = rows;\n        gridLayout.cols = cols;\n        gridLayout.width = width;\n        gridLayout.height = height;\n        gridLayout.padding = padding;\n\n\n        return gridLayout;\n    };\n\n    const getGridCoordinates = (n, grx) => {\n        let lvy = Math.floor(n / grx);\n        let lvx = n % grx;\n        return [lvx, lvy];\n    };\n\n    const yAxis = svg => svg\n        .attr(\"transform\", `translate(${marginLeftRight},0)`)\n        .call(d3.axisLeft(yy));\n\n    const yy = d3.scaleBand()\n        .domain(rubros)\n        .range([marginTopDown, height - marginTopDown]);\n\n\n    GridChart.pintar = () => {\n        d3.select(target).selectAll(\"svg\").remove();\n        const svgg = d3.select(target).append(\"svg\").attr(\"width\", width).attr(\"height\", height)\n\n        svgg.append(\"g\")\n            .call(yAxis);\n\n        var circulos = svgg.selectAll(\"circle\").data(d3.range(nElements)).enter().append(\"circle\")\n            .attr(\"r\", r).attr(\"cx\", r).attr(\"cy\", r)\n            .attr(\"fill\", d => {\n                let coord = getGridCoordinates(d, ciudades.length)\n                let ciudad = ciudades[coord[0]]\n                let rubro = rubros[coord[1]]\n                let incos = ciudad.irregularidadesEncontradas.find(d => d.name == rubro)\n                if (rubro == \"ciudad\")\n                    return \"white\"\n                return incos ? incos.ingreso ? \"#F9CA3D\" : \"#B75952\" : \"#9E9FA3\"\n            });\n\n        circulos.call(gridLayout(cols, rows, p, width, height));\n\n\n        return svgg.node();\n\n    };\n\n\n    return GridChart;\n\n}","import React, { Component } from 'react'\nimport GridChart from \"./GridChart.js\";\n\n\nexport default class TableIrregularidades extends Component {\n\n  constructor(props) {\n    super(props);\n    this.laref = React.createRef();\n  }\n\n  componentDidMount() {\n    const gc = GridChart(this.props.ciudades || [], this.laref.current);\n    gc.pintar();\n  }\n\n  componentDidUpdate() {\n    const gc = GridChart(this.props.ciudades ||  [], this.laref.current);\n    gc.pintar();\n  }\n\n  render() {\n    return (\n      <div className=\"TableroIrregularidadesClass\">\n        <div ref={this.laref}></div>\n      </div>\n    )\n  }\n}\n\n\n// import React, { useRef, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n\n// import GridChart from \"./GridChart.js\";\n\n// const TableroIrregularidades = props => {\n\n//   const targetRef = useRef(null);\n\n//   useEffect(() => {\n//     const gc = GridChart(props.ciudades || [], targetRef.current);\n//     gc.pintar();\n//   });\n\n//   return (\n//     <div className=\"TableroIrregularidades\">\n//       <div ref={targetRef}></div>\n//     </div>\n//   );\n// };\n\n// TableroIrregularidades.propTypes = {\n//   ciudades: PropTypes.array.isRequired\n// };\n\n// export default TableroIrregularidades;","/* global d3 */\n\nimport * as d3 from \"d3\";\n\nexport default function BarChartHierarchy(target, addCityToTable) {\n  const BarChartHierarchy = {};\n\n  const margin = { top: 30, right: 30, bottom: 0, left: 100 };\n\n  const width = 600;\n  let height = 600;\n\n  const x = d3.scaleLinear().range([margin.left, width - margin.right]);\n  const xAxis = g =>\n    g\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(0,${margin.top})`)\n      .call(d3.axisTop(x).ticks(width / 80, \"s\"))\n      .call(g => (g.selection ? g.selection() : g).select(\".domain\").remove());\n  const yAxis = g =>\n    g\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left + 0.5},0)`)\n      .call(g =>\n        g\n          .append(\"line\")\n          .attr(\"stroke\", \"currentColor\")\n          .attr(\"y1\", margin.top)\n          .attr(\"y2\", height - margin.bottom)\n      );\n\n  const color = d3.scaleOrdinal([true, false], [\"steelblue\", \"#aaa\"]);\n\n  const barStep = 27;\n  const barPadding = 3 / barStep;\n  const duration = 750;\n\n  BarChartHierarchy.update = data => {\n    const root = d3\n      .hierarchy(data)\n      .sum(d => d.value)\n      .sort((a, b) => b.value - a.value)\n      .eachAfter(\n        d =>\n          (d.index = d.parent ? (d.parent.index = d.parent.index + 1 || 0) : 0)\n      );\n\n    let max = 1;\n    root.each(d => d.children && (max = Math.max(max, d.children.length)));\n    height = max * barStep + margin.top + margin.bottom;\n\n    const svg = d3\n      .select(target)\n      .selectAll(\"svg\")\n      .data([\"John\"])\n      .join(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    x.domain([0, root.value]);\n\n    svg\n      .append(\"rect\")\n      .attr(\"class\", \"background\")\n      .attr(\"fill\", \"none\")\n      .attr(\"pointer-events\", \"all\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"click\", d => up(svg, d));\n\n    svg\n      .selectAll(\"g.x-axis\")\n      .data(d => d)\n      .join(\"g\")\n      .call(xAxis);\n\n    svg\n      .selectAll(\"g.y-axis\")\n      .data(d => d)\n      .join(\"g\")\n      .call(yAxis);\n\n    down(svg, root);\n\n    // Creates a set of bars for the given data node, at the specified index.\n    function bar(svg, down, d, selector) {\n      const g = svg\n        .insert(\"g\", selector)\n        .attr(\"class\", \"enter\")\n        .attr(\"transform\", `translate(0,${margin.top + barStep * barPadding})`)\n        .attr(\"text-anchor\", \"end\")\n        .style(\"font\", \"10px sans-serif\");\n\n      const bar = g\n        .selectAll(\"g\")\n        .data(d.children)\n        .join(\"g\")\n        .attr(\"cursor\", d => (!d.children ? null : \"pointer\"))\n        .on(\"click\", d => down(svg, d));\n\n      bar\n        .append(\"text\")\n        .attr(\"x\", margin.left - 6)\n        .attr(\"y\", (barStep * (1 - barPadding)) / 2)\n        .attr(\"dy\", \".35em\")\n        .text(d => d.data.name);\n\n      bar\n        .append(\"rect\")\n        .attr(\"x\", x(0))\n        .attr(\"width\", d => x(d.value) - x(0))\n        .attr(\"height\", barStep * (1 - barPadding));\n\n      return g;\n    }\n\n    function down(svg, d) {\n      if (!d.children || d3.active(svg.node())) {\n        addCityToTable(d);\n        return;\n      }\n      // Rebind the current node to the background.\n      svg.select(\".background\").datum(d);\n\n      // Define two sequenced transitions.\n      const transition1 = svg.transition().duration(duration);\n      const transition2 = transition1.transition();\n\n      // Mark any currently-displayed bars as exiting.\n      const exit = svg.selectAll(\".enter\").attr(\"class\", \"exit\");\n\n      // Entering nodes immediately obscure the clicked-on bar, so hide it.\n      exit.selectAll(\"rect\").attr(\"fill-opacity\", p => (p === d ? 0 : null));\n\n      // Transition exiting bars to fade out.\n      exit\n        .transition(transition1)\n        .attr(\"fill-opacity\", 0)\n        .remove();\n\n      // Enter the new bars for the clicked-on data.\n      // Per above, entering bars are immediately visible.\n      const enter = bar(svg, down, d, \".y-axis\").attr(\"fill-opacity\", 0);\n\n      // Have the text fade-in, even though the bars are visible.\n      enter.transition(transition1).attr(\"fill-opacity\", 1);\n\n      // Transition entering bars to their new y-position.\n      enter\n        .selectAll(\"g\")\n        .attr(\"transform\", stack(d.index))\n        .transition(transition1)\n        .attr(\"transform\", stagger());\n\n      // Update the x-scale domain.\n      x.domain([0, d3.max(d.children, d => d.value)]);\n\n      // Update the x-axis.\n      svg\n        .selectAll(\".x-axis\")\n        .transition(transition2)\n        .call(xAxis);\n\n      // Transition entering bars to the new x-scale.\n      enter\n        .selectAll(\"g\")\n        .transition(transition2)\n        .attr(\"transform\", (d, i) => `translate(0,${barStep * i})`);\n\n      // Color the bars as parents; they will fade to children if appropriate.\n      enter\n        .selectAll(\"rect\")\n        .attr(\"fill\", color(true))\n        .attr(\"fill-opacity\", 1)\n        .transition(transition2)\n        .attr(\"fill\", d => color(!!d.children))\n        .attr(\"width\", d => x(d.value) - x(0));\n    }\n\n    function up(svg, d) {\n      if (!d.parent || !svg.selectAll(\".exit\").empty()) return;\n\n      // Rebind the current node to the background.\n      svg.select(\".background\").datum(d.parent);\n\n      // Define two sequenced transitions.\n      const transition1 = svg.transition().duration(duration);\n      const transition2 = transition1.transition();\n\n      // Mark any currently-displayed bars as exiting.\n      const exit = svg.selectAll(\".enter\").attr(\"class\", \"exit\");\n\n      // Update the x-scale domain.\n      x.domain([0, d3.max(d.parent.children, d => d.value)]);\n\n      // Update the x-axis.\n      svg\n        .selectAll(\".x-axis\")\n        .transition(transition1)\n        .call(xAxis);\n\n      // Transition exiting bars to the new x-scale.\n      exit\n        .selectAll(\"g\")\n        .transition(transition1)\n        .attr(\"transform\", stagger());\n\n      // Transition exiting bars to the parent’s position.\n      exit\n        .selectAll(\"g\")\n        .transition(transition2)\n        .attr(\"transform\", stack(d.index));\n\n      // Transition exiting rects to the new scale and fade to parent color.\n      exit\n        .selectAll(\"rect\")\n        .transition(transition1)\n        .attr(\"width\", d => x(d.value) - x(0))\n        .attr(\"fill\", color(true));\n\n      // Transition exiting text to fade out.\n      // Remove exiting nodes.\n      exit\n        .transition(transition2)\n        .attr(\"fill-opacity\", 0)\n        .remove();\n\n      // Enter the new bars for the clicked-on data's parent.\n      const enter = bar(svg, down, d.parent, \".exit\").attr(\"fill-opacity\", 0);\n\n      enter\n        .selectAll(\"g\")\n        .attr(\"transform\", (d, i) => `translate(0,${barStep * i})`);\n\n      // Transition entering bars to fade in over the full duration.\n      enter.transition(transition2).attr(\"fill-opacity\", 1);\n\n      // Color the bars as appropriate.\n      // Exiting nodes will obscure the parent bar, so hide it.\n      // Transition entering rects to the new x-scale.\n      // When the entering parent rect is done, make it visible!\n      enter\n        .selectAll(\"rect\")\n        .attr(\"fill\", d => color(!!d.children))\n        .attr(\"fill-opacity\", p => (p === d ? 0 : null))\n        .transition(transition2)\n        .attr(\"width\", d => x(d.value) - x(0))\n        .on(\"end\", function(p) {\n          d3.select(this).attr(\"fill-opacity\", 1);\n        });\n    }\n\n    function stack(i) {\n      let value = 0;\n      return d => {\n        const t = `translate(${x(value) - x(0)},${barStep * i})`;\n        value += d.value;\n        return t;\n      };\n    }\n\n    function stagger() {\n      let value = 0;\n      return (d, i) => {\n        const t = `translate(${x(value) - x(0)},${barStep * i})`;\n        value += d.value;\n        return t;\n      };\n    }\n  };\n\n  return BarChartHierarchy;\n}\n\n// const bh = BarChartHierarchy();\n\n// d3.json(\"flare-2.json\").then(data => bh.update(data));\n","import React, { Component } from 'react'\nimport BarChartHierarchy from \"./BarChartHierarchy.js\";\n\n\nexport default class BarchartHierarchyWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.laref = React.createRef();\n  }\n\n  componentDidMount() {\n    const bh = BarChartHierarchy(this.laref.current, this.props.addCityToTable);\n    console.log(\"bh update\", this.props.data);\n    bh.update(this.props.data);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"BarchartHierarchyWrapper\">\n          <div ref={this.laref}></div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Histograma from './Histograma.js';\nimport * as d3 from \"d3\";\nexport default class Medias extends Component {\n\n    constructor(props) {\n        super(props);\n        this.laref = React.createRef();\n\n        this.state = {\n            hs: null\n        }\n    }\n\n\n    componentDidMount() {\n        console.log(\"pre filter mount\", {dataForHist: this.props.dataForHist});\n        let valores = this.props.dataForHist.map(d => d.PAGOS * 1);\n        console.log(\"pre pintar\", valores)\n        const hs = Histograma(this.laref.current, valores);\n        hs.pintar();\n\n        this.setState({ hs: hs })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(\"pre filter update\", {dataForHist: this.props.dataForHist});\n        if (prevProps.dataForHist != this.props.dataForHist) {\n            const { hs } = this.state;\n            let valores = this.props.dataForHist.map(d => d.PAGOS * 1);\n            console.log(\"pre update\", valores)\n            hs.update(valores);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"Medias\">\n                <div ref={this.laref}></div>\n            </div>\n        )\n    }\n}\n","\nimport * as d3 from 'd3';\n\nexport default function Histograma(target, data) {\n    const Histograma = {};\n    var data = data;\n    var margin = { top: 50, left: 50, bottom: 50, right: 75 },\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n\n    var svg = d3.select(target).append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    const mean = d3.mean(data);\n    const std = d3.deviation(data);\n\n    data.sort(function (a, b) { return a - b; });\n\n    var x = d3.scaleLinear()\n        .domain(d3.extent(data)).nice()\n        .range([0, width]);\n\n\n    var ticks = { req: { min: 5, max: 20 }, got: [] };\n\n    (function () {\n        var t = 0;\n        for (var i = ticks.req.min; i <= ticks.req.max + 1; i++) {\n            var xilength = x.ticks(i).length;\n            if (xilength > t) {\n                t = xilength;\n                ticks.got.push(xilength)\n            }\n        }\n    })();\n\n    ticks.def = ticks.got[Math.round(ticks.got.length / 2) - 1];\n    ticks.cur = ticks.def;\n\n    var bins = binData(data, x, ticks.def);\n    var y = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0, d3.max(bins.map(function (d) { return d.count }))]);\n\n    var xAxis = d3.axisBottom(x),\n        yAxis = d3.axisLeft(y);\n\n    var minusButton = svg.append(\"g\")\n        .attr(\"class\", \"zoomButton minus\")\n        .attr(\"transform\", \"translate(\" + width + \",\" + 55 + \")\")\n        .classed(\"active\", ticks.got.indexOf(ticks.cur) > 0)\n        .classed(\"inactive\", ticks.got.indexOf(ticks.cur) == 0)\n        .on(\"click\", zoom)\n\n    var plusButton = svg.append(\"g\")\n        .attr(\"class\", \"zoomButton plus\")\n        .attr(\"transform\", \"translate(\" + width + \",0)\")\n        .classed(\"active\", ticks.got.indexOf(ticks.cur) < (ticks.got.length - 1))\n        .classed(\"inactive\", ticks.got.indexOf(ticks.cur) == (ticks.got.length - 1))\n        .on(\"click\", zoom)\n\n\n\n    plusButton.append(\"rect\")\n        .attr(\"width\", 50)\n        .attr(\"height\", 50)\n        .attr(\"fill\", \"green\")\n\n    plusButton.append(\"text\")\n        .attr(\"x\", 25)\n        .attr(\"y\", 50)\n        .text(\"+\")\n        .attr(\"text-anchor\", \"middle\")\n\n\n    minusButton.append(\"rect\")\n        .attr(\"width\", 50)\n        .attr(\"height\", 50)\n        .attr(\"fill\", \"red\")\n\n    minusButton.append(\"text\")\n        .attr(\"x\", 25)\n        .attr(\"y\", 50)\n        .attr(\"dy\", -2)\n        .text(\"-\")\n        .attr(\"text-anchor\", \"middle\");\n\n\n    var duration = 1000;\n\n    function binData(dat, s, t) {\n        var b = [];\n\n        console.log(\"bindata\", { s: s.ticks(t), t: t })\n\n        s.ticks(t).forEach(function (d, i) {\n            if (i < x.ticks(t).length - 1) {\n                b.push({ bin: i, min: d, max: x.ticks(t)[i + 1] })\n            }\n        });\n\n        b.forEach(function (d) {\n            d.count = dat.filter(function (e) { return e >= d.min && e < d.max }).length;\n        })\n        return b;\n    }\n\n    function zoom() {\n\n        if (this) {\n            if (d3.select(this).classed(\"inactive\")) { return 0; }\n\n            if (d3.select(this).classed(\"plus\")) {\n                ticks.cur = ticks.got[ticks.got.indexOf(ticks.cur) + 1]\n            } else {\n                ticks.cur = ticks.got[ticks.got.indexOf(ticks.cur) - 1]\n            }\n        }\n\n\n        minusButton.classed(\"active\", ticks.got.indexOf(ticks.cur) > 0)\n            .classed(\"inactive\", ticks.got.indexOf(ticks.cur) == 0)\n\n        plusButton.classed(\"active\", ticks.got.indexOf(ticks.cur) < (ticks.got.length - 1))\n            .classed(\"inactive\", ticks.got.indexOf(ticks.cur) == (ticks.got.length - 1))\n\n        svg.select(\".axis.x\")\n            .transition()\n            .duration(duration)\n            .call(xAxis.ticks(ticks.cur))\n\n        var newBins = binData(data, x, ticks.cur);\n\n        y.domain([0, d3.max(newBins.map(function (d) { return d.count }))]);\n\n        svg.select(\".axis.y\")\n            .transition()\n            .duration(duration)\n            .call(yAxis);\n\n        svg.selectAll(\".bar\")\n            .transition()\n            .duration(duration)\n            .attr(\"height\", function (d) { return height - y(0) })\n            .attr(\"y\", function (d) { return y(0) })\n            .transition()\n            .remove();\n\n        svg.selectAll(null)\n            .data(newBins)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"width\", x(newBins[0].max) - x(newBins[0].min) - 2)\n            .attr(\"height\", function (d) { return height - y(0) })\n            .attr(\"y\", function (d) { return y(0) })\n            .attr(\"x\", function (d) { return x(d.min) })\n            .attr(\"fill\", d => {\n                // console.log(\"datos\", { d: d, media: mean, desv: std, calc: mean + std * 1.96 })\n                if (mean + std * 1.96 <= d.max)\n                    return \"red\"\n                else\n                    return \"steelblue\"\n            })\n            .transition()\n            .duration(duration)\n            .attr(\"height\", function (d) { return height - y(d.count) })\n            .attr(\"y\", function (d) { return y(d.count) });\n\n\n    }\n\n    Histograma.update = (valores) => {\n        console.log(\"update\", valores)\n        if (valores && valores.length > 0 && valores != data) {\n            data = valores;\n            zoom();\n        }\n    }\n\n    // console.log(\"datos\", { bins: bins, data: data, ticks: ticks.def })\n    Histograma.pintar = () => {\n        svg.selectAll(\".bar\")\n            .data(bins)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"width\", x(bins[0].max) - x(bins[0].min) - 2)\n            .attr(\"height\", function (d) { return height - y(d.count) })\n            .attr(\"x\", function (d) { return x(d.min) })\n            .attr(\"y\", function (d) { return y(d.count) })\n            .attr(\"fill\", d => {\n                if (mean + std * 1.96 <= d.max)\n                    return \"red\"\n                else\n                    return \"steelblue\"\n            })\n\n        svg.append(\"g\")\n            .attr(\"class\", \"axis x\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(xAxis.tickFormat(d3.format(\"$.2s\")))\n\n        svg.append(\"g\")\n            .attr(\"class\", \"axis y\")\n            .call(yAxis.tickFormat(d3.format(\".2s\")));\n\n        return svg.node();\n    }\n\n    return Histograma;\n}","import React, { Component } from 'react'\nimport { Container, Col, Row, Dropdown } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { endpoints, categorias } from './Variables';\nimport * as d3 from \"d3\";\nimport TableIrregularidades from \"./TableIrregularidades.jsx\";\nimport BarchartHierarchyWrapper from \"./BarchartHierarchyWrapper.jsx\";\nimport Medias from \"./Medias\";\nexport default class Main extends Component {\n\n    state = {\n        data: null,\n        ciudades: [],\n        catSelected: categorias[0],\n        dataCategoria: null,\n        rubros: [],\n        dataForHist: null,\n        rubroSelected: null\n    }\n\n    componentWillMount() {\n        d3.json(endpoints.dataBarchart).then(data => {\n            this.setState({ data: data });\n        });\n\n        d3.csv(\"./\" + this.state.catSelected + \".csv\").then(datas => {\n\n            this.setState({ dataCategoria: datas });\n\n            let rubros = d3.map(datas, d => d.NOM_DEST).keys();\n            this.setState({ rubros: rubros, rubroSelected: rubros[0] });\n\n            let dataForH = datas.filter(d => d.NOM_DEST == this.state.rubroSelected)\n            this.setState({ dataForHist: dataForH })\n        })\n    }\n\n    addCityToTable = city => {\n        console.log(\"datos tabla\", { ciudades: this.state.ciudades, city: city })\n        const { ciudades } = this.state;\n        ciudades.push(city.data);\n        console.log(\"add node\", ciudades);\n        this.setState({ ciudades: ciudades });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (this.state.catSelected != prevState.catSelected)\n            d3.csv(\"./\" + this.state.catSelected + \".csv\").then(datas => {\n\n                this.setState({ dataCategoria: datas });\n\n                let rubros = d3.map(datas, d => d.NOM_DEST).keys();\n                this.setState({ rubros: rubros, rubroSelected: rubros[0] });\n\n                let dataForH = datas.filter(d => d.NOM_DEST == this.state.rubroSelected)\n                this.setState({ dataForHist: dataForH })\n            })\n\n        if (this.state.rubroSelected != prevState.rubroSelected) {\n            let dataForH = this.state.dataCategoria.filter(d => d.NOM_DEST == this.state.rubroSelected)\n            this.setState({ dataForHist: dataForH })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col lg={12}>\n                            <Dropdown style={{ display: \"inline\", margin: \"5px\" }}>\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                    Categoria {this.state.catSelected}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    {categorias.map((cat, index) => {\n                                        return <Dropdown.Item key={index} onClick={() => this.setState({ catSelected: cat })}>{cat}</Dropdown.Item>\n                                    })}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            {\n                                this.state.rubros && this.state.rubros.length > 0 ?\n                                    (<Dropdown style={{ display: \"inline\", margin: \"5px\" }}>\n                                        <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                                            Rubro {this.state.rubroSelected}\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            {this.state.rubros.map((rubro, index) => {\n                                                return <Dropdown.Item key={index} onClick={() => this.setState({ rubroSelected: rubro })}>{rubro}</Dropdown.Item>\n                                            })}\n                                        </Dropdown.Menu>\n                                    </Dropdown>)\n                                    : (\n                                        <></>\n                                    )\n                            }\n\n                        </Col>\n                    </Row>\n                    {\n                        this.state.dataForHist ? (\n                            <Row>\n                                <Col lg={12}>\n                                    <Medias dataForHist={this.state.dataForHist}/>\n                                </Col>\n                            </Row>\n                        ) : (\n                                <></>\n                            )\n                    }\n                    <Row>\n                        <Col lg={6}>\n                            {\n                                this.state.data ?\n                                    <BarchartHierarchyWrapper data={this.state.data} addCityToTable={this.addCityToTable}></BarchartHierarchyWrapper>\n                                    : <></>\n                            }\n\n                        </Col>\n                        <Col lg={6}>\n                            {\n                                this.state.ciudades && this.state.ciudades.length > 0 ?\n                                    <TableIrregularidades ciudades={this.state.ciudades}></TableIrregularidades>\n                                    : <></>\n                            }\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Main from './Main';\nfunction App() {\n  return (\n    <div className=\"App\" style={{margin: \"20px\"}}>\n      <Main />\n    </div >\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}